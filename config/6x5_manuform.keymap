/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        semicolon: semicolon {
            compatible = "zmk,behavior-hold-tap";
            label = "SEMICOLON";
            bindings = <&to>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <50>;
            flavor = "tap-preferred";
        };

        enter: enter {
            compatible = "zmk,behavior-hold-tap";
            label = "ENTER";
            bindings = <&to>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <50>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        home {
            bindings = <&kp ESCAPE>;
            key-positions = <31 32>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC   |  1  |  2  |  3   |  4   |  5   |                    |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB   |  Q  |  W  |  E   |  R   |  T   |                    |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL  |  A  |  S  |  D   |  F   |  G   |                    |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT  |  Z  |  X  |  C   |  V   |  B   |                    |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            // |    2   |  2  | f   | 6    | 4    | 1    |                    | 2    | 1     | w     | s    | n     |  a    |

            bindings = <
&kp ESC    &kp N1    &kp N2  &kp N3     &kp N4     &kp N5    &kp N6    &kp N7          &kp N8     &kp N9   &kp N0                  &kp EQUAL
&kp TAB    &kp Q     &kp W   &kp E      &kp R      &kp T     &kp Y     &kp U           &kp I      &kp O    &kp P                   &kp MINUS
&kp LSHFT  &kp A     &kp S   &kp D      &kp F      &kp G     &kp H     &kp J           &kp K      &kp L    &semicolon 1 SEMICOLON  &kp SQT
&kp GRAVE  &kp Z     &kp X   &kp C      &kp V      &kp B     &kp N     &kp M           &kp COMMA  &kp DOT  &kp FSLH                &kp BSLH
&kp LCTRL  &kp BSPC  &mo 0   &kp LSHFT  &kp SPACE  &kp LALT  &kp RALT  &enter 2 ENTER  &kp RGUI   &mo 0    &kp LEFT_SHIFT          &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        vim {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans          &trans        &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans          &trans        &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans          &trans        &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans          &trans        &trans           &trans  &trans
            >;
        };

        symbols {
            bindings = <
&kp F1           &kp F2       &kp F3                &kp F4                 &kp F5     &kp F6  &kp F7  &kp F8             &kp F9             &kp F10         &kp F11        &kp F12
&kp EXCLAMATION  &kp AT_SIGN  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE   &trans  &kp     &kp LESS_THAN      &kp GREATER_THAN   &kp MINUS       &kp PLUS       &kp F12
&kp POUND        &kp DOLLAR   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE  &trans  &kp     &kp LEFT_BRACKET   &kp RIGHT_BRACKET  &kp UNDERSCORE  &kp EQUAL      &kp
&kp PERCENT      &kp CARET    &kp AMPERSAND         &kp PLUS               &kp TILDE  &trans  &kp     &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE   &kp QUESTION    &kp BACKSLASH  &kp
&kp              &kp          &kp                   &kp                    &kp        &kp     &kp     &kp                &kp                &kp             &kp            &kp
            >;
        };
    };
};
